"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.11.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
################## Sphinx setting  ##################
import django
#import os
################## mysql connection ################## 
import pymysql
pymysql.install_as_MySQLdb()
from . import my_conn
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
print("BASE_DIR=",BASE_DIR)
# Include BOOTSTRAP3_FOLDER in path
BOOTSTRAP3_FOLDER = os.path.abspath(os.path.join(BASE_DIR, '.', 'bootstrap3'))
if BOOTSTRAP3_FOLDER not in sys.path:
    sys.path.insert(0, BOOTSTRAP3_FOLDER)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '=io-(#@n4=+t@^j@tyn!tb8_71e%4m0qsa+6s=z630a2hku1yn'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = [localhost', '127.0.0.1', '[::1]','mrok88.pythonanywhere.com']
ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.humanize',  # number comma
    'bootstrap3',    
    'djng',             #django-angular
    'easy_thumbnails',  # optional, if ImageField is used
    'background_task',  # batch job 관련 library
    'demo',    
    'blog',	
    'polls',
    'mdl2tbl',
    'mdl2tbl.templatetags.post_extras',
    'dq',
    'django_extensions',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = my_conn.DATABASES


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'ko'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#STATIC_ROOT = os.path.join(BASE_DIR,"collected_statics")
#STATICFILES_DIRS = [
#    os.path.join(BASE_DIR, "static"),
#]
LOGIN_REDIRECT_URL = '/blog/'

# Settings for django-bootstrap3
BOOTSTRAP3 = {
    #'set_required': False,  # For Django <= 1.8 only
    'error_css_class': 'bootstrap3-error',
    'required_css_class': 'bootstrap3-required',
    'javascript_in_head': True,
}
#django-angluar 
FORM_RENDERER = 'djng.forms.renderers.DjangoAngularBootstrap3Templates'
# non-bootstraip3
#FORM_RENDERER = 'djng.forms.renderers.DjangoAngularTemplates'

############################# batch job 관련 설정 시작 #############################
# MAX_ATTEMPTS - controls how many times a task will be attempted (default 25)
# MAX_RUN_TIME - maximum possible task run time, 
#                after which tasks will be unlocked and tried again (default 3600 seconds)
# BACKGROUND_TASK_RUN_ASYNC - If True, will run the tasks asynchronous. 
#                This means the tasks will be processed in parallel (at the same time)
#                instead of processing one by one (one after the other).
BACKGROUND_TASK_RUN_ASYNC = True
# BACKGROUND_TASK_ASYNC_THREADS - Specifies number of concurrent threads.
#                Default is multiprocessing.cpu_count().
BACKGROUND_TASK_ASYNC_THREADS = 2
# BACKGROUND_TASK_PRIORITY_ORDERING - Control the ordering of tasks in the queue.
#                Default is "DESC" (tasks with a higher number are processed first). 
#                Choose "ASC" to switch to the “niceness” ordering. 
#                A niceness of −20 is the highest priority and 19 is the lowest priority.
BACKGROUND_TASK_PRIORITY_ORDERING = "ASC"
############################# batch job 관련 설정 종료 #############################


# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
#         },
#         'simple': {
#             'format': '%(levelname)s %(message)s'
#         },
#     },
#     'handlers': {
#         'file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': 'logs/request.log',
#             'formatter': 'verbose',
#         },
#         'debug_file': {
#             'level': 'DEBUG',
#             'class': 'logging.FileHandler',
#             'filename': 'logs/debug.log',
#             'formatter': 'verbose',
#         },
#     },
#     'loggers': {
#         'django': {
#             'handlers': ['file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'background_task': {
#             'handlers': ['debug_file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#         'dq': {
#             'handlers': ['debug_file'],
#             'level': 'DEBUG',
#             'propagate': True,
#         },
#     },
# }

GRAPH_MODELS = {
  'all_applications': True,
  'group_models': True,
}